{
  "contractName": "Standard223Token",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    }
  ],
  "bytecode": "0x6060604052341561000f57600080fd5b6109d48061001e6000396000f3006060604052600436106100a35763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100a857806318160ddd146100de57806323b872dd14610103578063661884631461012b57806370a082311461014d578063a9059cbb1461016c578063ab67aa581461018e578063be45fd62146101fa578063d73dd6231461025f578063dd62ed3e14610281575b600080fd5b34156100b357600080fd5b6100ca600160a060020a03600435166024356102a6565b604051901515815260200160405180910390f35b34156100e957600080fd5b6100f1610312565b60405190815260200160405180910390f35b341561010e57600080fd5b6100ca600160a060020a0360043581169060243516604435610318565b341561013657600080fd5b6100ca600160a060020a0360043516602435610353565b341561015857600080fd5b6100f1600160a060020a036004351661044d565b341561017757600080fd5b6100ca600160a060020a0360043516602435610468565b341561019957600080fd5b6100ca600160a060020a036004803582169160248035909116916044359160849060643590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061049895505050505050565b341561020557600080fd5b6100ca60048035600160a060020a03169060248035919060649060443590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506104dd95505050505050565b341561026a57600080fd5b6100ca600160a060020a036004351660243561051f565b341561028c57600080fd5b6100f1600160a060020a03600435811690602435166105c3565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60005481565b6000610349848484600060405180591061032f5750595b818152601f19601f83011681016020016040529050610498565b90505b9392505050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054808311156103b057600160a060020a0333811660009081526002602090815260408083209388168352929052908120556103e7565b6103c0818463ffffffff6105ee16565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600160a060020a031660009081526001602052604090205490565b600061034c8383600060405180591061047e5750595b818152601f19601f830116810160200160405290506104dd565b60006104a5858585610600565b15156104b057600080fd5b6104b984610782565b156104d1576104ca8585858561078a565b90506104d5565b5060015b949350505050565b60006104e9848461089e565b15156104f457600080fd5b6104fd84610782565b156105155761050e3385858561078a565b905061034c565b5060019392505050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610557908363ffffffff61099916565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156105fa57fe5b50900390565b6000600160a060020a038316151561061757600080fd5b600160a060020a03841660009081526001602052604090205482111561063c57600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561066f57600080fd5b600160a060020a038416600090815260016020526040902054610698908363ffffffff6105ee16565b600160a060020a0380861660009081526001602052604080822093909355908516815220546106cd908363ffffffff61099916565b600160a060020a03808516600090815260016020908152604080832094909455878316825260028152838220339093168252919091522054610715908363ffffffff6105ee16565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b6000903b1190565b600083600160a060020a03811663c0ee0b8a33868686604051602001526040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561082d578082015183820152602001610815565b50505050905090810190601f16801561085a5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b151561087a57600080fd5b6102c65a03f1151561088b57600080fd5b5050506040518051979650505050505050565b6000600160a060020a03831615156108b557600080fd5b600160a060020a0333166000908152600160205260409020548211156108da57600080fd5b600160a060020a033316600090815260016020526040902054610903908363ffffffff6105ee16565b600160a060020a033381166000908152600160205260408082209390935590851681522054610938908363ffffffff61099916565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b60008282018381101561034c57fe00a165627a7a723058207bbb48409d5f9eed8c94f468e0762ae65a919d6b7599350ebe132e35b4869aa80029",
  "deployedBytecode": "0x6060604052600436106100a35763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100a857806318160ddd146100de57806323b872dd14610103578063661884631461012b57806370a082311461014d578063a9059cbb1461016c578063ab67aa581461018e578063be45fd62146101fa578063d73dd6231461025f578063dd62ed3e14610281575b600080fd5b34156100b357600080fd5b6100ca600160a060020a03600435166024356102a6565b604051901515815260200160405180910390f35b34156100e957600080fd5b6100f1610312565b60405190815260200160405180910390f35b341561010e57600080fd5b6100ca600160a060020a0360043581169060243516604435610318565b341561013657600080fd5b6100ca600160a060020a0360043516602435610353565b341561015857600080fd5b6100f1600160a060020a036004351661044d565b341561017757600080fd5b6100ca600160a060020a0360043516602435610468565b341561019957600080fd5b6100ca600160a060020a036004803582169160248035909116916044359160849060643590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284375094965061049895505050505050565b341561020557600080fd5b6100ca60048035600160a060020a03169060248035919060649060443590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506104dd95505050505050565b341561026a57600080fd5b6100ca600160a060020a036004351660243561051f565b341561028c57600080fd5b6100f1600160a060020a03600435811690602435166105c3565b600160a060020a03338116600081815260026020908152604080832094871680845294909152808220859055909291907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259085905190815260200160405180910390a350600192915050565b60005481565b6000610349848484600060405180591061032f5750595b818152601f19601f83011681016020016040529050610498565b90505b9392505050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054808311156103b057600160a060020a0333811660009081526002602090815260408083209388168352929052908120556103e7565b6103c0818463ffffffff6105ee16565b600160a060020a033381166000908152600260209081526040808320938916835292905220555b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020547f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925915190815260200160405180910390a35060019392505050565b600160a060020a031660009081526001602052604090205490565b600061034c8383600060405180591061047e5750595b818152601f19601f830116810160200160405290506104dd565b60006104a5858585610600565b15156104b057600080fd5b6104b984610782565b156104d1576104ca8585858561078a565b90506104d5565b5060015b949350505050565b60006104e9848461089e565b15156104f457600080fd5b6104fd84610782565b156105155761050e3385858561078a565b905061034c565b5060019392505050565b600160a060020a033381166000908152600260209081526040808320938616835292905290812054610557908363ffffffff61099916565b600160a060020a0333811660008181526002602090815260408083209489168084529490915290819020849055919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591905190815260200160405180910390a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156105fa57fe5b50900390565b6000600160a060020a038316151561061757600080fd5b600160a060020a03841660009081526001602052604090205482111561063c57600080fd5b600160a060020a038085166000908152600260209081526040808320339094168352929052205482111561066f57600080fd5b600160a060020a038416600090815260016020526040902054610698908363ffffffff6105ee16565b600160a060020a0380861660009081526001602052604080822093909355908516815220546106cd908363ffffffff61099916565b600160a060020a03808516600090815260016020908152604080832094909455878316825260028152838220339093168252919091522054610715908363ffffffff6105ee16565b600160a060020a03808616600081815260026020908152604080832033861684529091529081902093909355908516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a35060019392505050565b6000903b1190565b600083600160a060020a03811663c0ee0b8a33868686604051602001526040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561082d578082015183820152602001610815565b50505050905090810190601f16801561085a5780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b151561087a57600080fd5b6102c65a03f1151561088b57600080fd5b5050506040518051979650505050505050565b6000600160a060020a03831615156108b557600080fd5b600160a060020a0333166000908152600160205260409020548211156108da57600080fd5b600160a060020a033316600090815260016020526040902054610903908363ffffffff6105ee16565b600160a060020a033381166000908152600160205260408082209390935590851681522054610938908363ffffffff61099916565b600160a060020a0380851660008181526001602052604090819020939093559133909116907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9085905190815260200160405180910390a350600192915050565b60008282018381101561034c57fe00a165627a7a723058207bbb48409d5f9eed8c94f468e0762ae65a919d6b7599350ebe132e35b4869aa80029",
  "sourceMap": "5896:1771:3:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "5896:1771:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5564:8;;;3868:197;;;;;;;;;;-1:-1:-1;;;;;3868:197:3;;;;;;;;;;;;;;;;;;;;;;;;241:26;;;;;;;;;;;;;;;;;;;;;;;;;;;6842:156;;;;;;;;;;-1:-1:-1;;;;;6842:156:3;;;;;;;;;;;;5078:444;;;;;;;;;;-1:-1:-1;;;;;5078:444:3;;;;;;;1952:117;;;;;;;;;;-1:-1:-1;;;;;1952:117:3;;;;;6710:126;;;;;;;;;;-1:-1:-1;;;;;6710:126:3;;;;;;;6398:306;;;;;;;;;;-1:-1:-1;;;;;6398:306:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6398:306:3;;-1:-1:-1;6398:306:3;;-1:-1:-1;;;;;;6398:306:3;6039:353;;;;;;;;;;;;;-1:-1:-1;;;;;6039:353:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6039:353:3;;-1:-1:-1;6039:353:3;;-1:-1:-1;;;;;;6039:353:3;4793:279;;;;;;;;;;-1:-1:-1;;;;;4793:279:3;;;;;;;4398:146;;;;;;;;;;-1:-1:-1;;;;;4398:146:3;;;;;;;;;;3868:197;-1:-1:-1;;;;;3959:10:3;3951:19;;3935:4;3951:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;:38;;;3935:4;;3951:29;:19;3999:38;;3983:6;;3999:38;;;;;;;;;;;;;-1:-1:-1;4054:4:3;3868:197;;;;:::o;241:26::-;;;;:::o;6842:156::-;6914:12;6945:46;6958:5;6965:3;6970:6;6988:1;6978:12;;;;;;;;;;;;;-1:-1:-1;;6978:12:3;;;;;;;;;;;;6945;:46::i;:::-;6938:53;;6842:156;;;;;;:::o;5078:444::-;-1:-1:-1;;;;;5209:10:3;5201:19;;5161:12;5201:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;5244:27;;;5240:184;;;-1:-1:-1;;;;;5295:10:3;5287:19;;5319:1;5287:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;:33;5240:184;;;5383:30;:8;5396:16;5383:30;:12;:30;:::i;:::-;-1:-1:-1;;;;;5359:10:3;5351:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;:62;5240:184;-1:-1:-1;;;;;5442:10:3;5433:61;;5464:19;;;;:7;:19;;;;;;;;5433:61;;;5464:29;;;;;;;;;;;;5433:61;;;;;;;;;;;;;;;-1:-1:-1;5511:4:3;;5078:444;-1:-1:-1;;;5078:444:3:o;1952:117::-;-1:-1:-1;;;;;2046:16:3;2012:15;2046:16;;;:8;:16;;;;;;;1952:117::o;6710:126::-;6763:12;6794:35;6803:3;6808:6;6826:1;6816:12;;;;;;;;;;;;;-1:-1:-1;;6816:12:3;;;;;;;;;;;;6794:8;:35::i;6398:306::-;6483:12;6512:38;6531:5;6538:3;6543:6;6512:18;:38::i;:::-;6511:39;6507:50;;;6552:5;;;6507:50;6609:15;6620:3;6609:10;:15::i;:::-;6605:71;;;6633:43;6650:5;6657:3;6662:6;6670:5;6633:16;:43::i;:::-;6626:50;;;;6605:71;-1:-1:-1;6693:4:3;6398:306;;;;;;;:::o;6039:353::-;6105:12;6206:27;6221:3;6226:6;6206:14;:27::i;:::-;6205:28;6201:39;;;6235:5;;;6201:39;6292:15;6303:3;6292:10;:15::i;:::-;6288:76;;;6316:48;6333:10;6345:3;6350:6;6358:5;6316:16;:48::i;:::-;6309:55;;;;6288:76;-1:-1:-1;6381:4:3;6039:353;;;;;:::o;4793:279::-;-1:-1:-1;;;;;4935:10:3;4927:19;;4871:12;4927:19;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;:46;;4961:11;4927:46;:33;:46;:::i;:::-;-1:-1:-1;;;;;4903:10:3;4895:19;;;;;;:7;:19;;;;;;;;:29;;;;;;;;;;;;;;:78;;;:29;;:19;;4983:61;;4895:78;4983:61;;;;;;;;;;;;;-1:-1:-1;5061:4:3;4793:279;;;;:::o;4398:146::-;-1:-1:-1;;;;;4512:15:3;;;4476:17;4512:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;4398:146::o;906:120:7:-;964:7;990:6;;;;983:14;;;;-1:-1:-1;1014:5:7;;;906:120::o;2751:472:3:-;2833:4;-1:-1:-1;;;;;2857:17:3;;;;2849:26;;;;;;-1:-1:-1;;;;;2903:15:3;;;;;;:8;:15;;;;;;2893:25;;;2885:34;;;;;;-1:-1:-1;;;;;2947:14:3;;;;;;;:7;:14;;;;;;;;2962:10;2947:26;;;;;;;;;;2937:36;;;2929:45;;;;;;-1:-1:-1;;;;;3002:15:3;;;;;;:8;:15;;;;;;:27;;3022:6;3002:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;2984:15:3;;;;;;;:8;:15;;;;;;:45;;;;3055:13;;;;;;;:25;;3073:6;3055:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;3039:13:3;;;;;;;:8;:13;;;;;;;;:41;;;;3119:14;;;;;:7;:14;;;;;3134:10;3119:26;;;;;;;;;;;:38;;3150:6;3119:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;3090:14:3;;;;;;;:7;:14;;;;;;;;3105:10;3090:26;;;;;;;;;;;:67;;;;3167:28;;;;;;3188:6;;3167:28;;;;;;;;;;;;;-1:-1:-1;3212:4:3;2751:472;;;;;:::o;7411:253::-;7463:16;7612:11;;7647:10;;7411:253::o;7072:241::-;7171:12;7236:3;-1:-1:-1;;;;;7257:22:3;;;7280:10;7292:6;7300:5;7171:12;7257:49;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7257:49:3;-1:-1:-1;;;;;7257:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;71:3;;;64:6;52:2;45:3;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7072:241:3;-1:-1:-1;;;;;;;7072:241:3:o;1326:408::-;1389:4;-1:-1:-1;;;;;1413:17:3;;;;1405:26;;;;;;-1:-1:-1;;;;;1468:10:3;1459:20;;;;;:8;:20;;;;;;1449:30;;;1441:39;;;;;;-1:-1:-1;;;;;1589:10:3;1580:20;;;;;:8;:20;;;;;;:32;;1605:6;1580:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;1566:10:3;1557:20;;;;;;:8;:20;;;;;;:55;;;;1638:13;;;;;;;:25;;1656:6;1638:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1622:13:3;;;;;;;:8;:13;;;;;;;:41;;;;:13;1682:10;1673:33;;;;;;1699:6;;1673:33;;;;;;;;;;;;;-1:-1:-1;1723:4:3;1326:408;;;;:::o;1096:143:7:-;1154:7;1185:5;;;1207:6;;;;1200:14;;",
  "source": "pragma solidity ^0.4.19;\n\nimport \"./SafeMath.sol\";\nimport \"./Receiver_Interface.sol\";\n\n/**\n * @title ERC20Basic\n * @dev Simpler version of ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/179\n */\ncontract ERC20Basic {\n    uint256 public totalSupply;\n\n    function balanceOf(address who) public constant returns (uint256);\n\n    function transfer(address to, uint256 value) public returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n}\n\n/**\n * @title ERC20 interface\n * @dev see https://github.com/ethereum/EIPs/issues/20\n */\ncontract ERC20 is ERC20Basic {\n    function allowance(address owner, address spender) public constant returns (uint256);\n\n    function transferFrom(address from, address to, uint256 value) public returns (bool);\n\n    function approve(address spender, uint256 value) public returns (bool);\n\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n/**\n * @title Basic token\n * @dev Basic version of StandardToken, with no allowances.\n */\ncontract BasicToken is ERC20Basic {\n    using SafeMath for uint256;\n\n    mapping(address => uint256) balances;\n\n    /**\n    * @dev transfer token for a specified address\n    * @param _to The address to transfer to.\n    * @param _value The amount to be transferred.\n    */\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[msg.sender]);\n        // SafeMath.sub will throw if there is not enough balance.\n        balances[msg.sender] = balances[msg.sender].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        Transfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev Gets the balance of the specified address.\n     * @param _owner The address to query the the balance of.\n     * @return An uint256 representing the amount owned by the passed address.\n     */\n    function balanceOf(address _owner) public constant returns (uint256 balance) {\n        return balances[_owner];\n    }\n}\n\n/** \n * @title Standard ERC20 token \n * \n * @dev Implementation of the basic standard token. \n * @dev https://github.com/ethereum/EIPs/issues/20 \n * @dev Based on code by FirstBlood: https://github.com/Firstbloodio/token/blob/master/smart_contract/FirstBloodToken.sol \n */\ncontract StandardToken is ERC20, BasicToken {\n\n    mapping(address => mapping(address => uint256)) internal allowed;\n\n    /**\n     * @dev Transfer tokens from one address to another\n     * @param _from address The address which you want to send tokens from\n     * @param _to address The address which you want to transfer to\n     * @param _value uint256 the amount of tokens to be transferred\n     */\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(_to != address(0));\n        require(_value <= balances[_from]);\n        require(_value <= allowed[_from][msg.sender]);\n        balances[_from] = balances[_from].sub(_value);\n        balances[_to] = balances[_to].add(_value);\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);\n        Transfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev Approve the passed address to spend the specified amount of tokens on behalf of msg.sender.\n     *\n     * Beware that changing an allowance with this method brings the risk that someone may use both the old\n     * and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this\n     * race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * @param _spender The address which will spend the funds.\n     * @param _value The amount of tokens to be spent.\n     */\n    function approve(address _spender, uint256 _value) public returns (bool) {\n        allowed[msg.sender][_spender] = _value;\n        Approval(msg.sender, _spender, _value);\n        return true;\n    }\n\n    /**\n     * @dev Function to check the amount of tokens that an owner allowed to a spender.\n     * @param _owner address The address which owns the funds.\n     * @param _spender address The address which will spend the funds.\n     * @return A uint256 specifying the amount of tokens still available for the spender.\n     */\n    function allowance(address _owner, address _spender) public constant returns (uint256 remaining) {\n        return allowed[_owner][_spender];\n    }\n\n    /**\n     * approve should be called when allowed[_spender] == 0. To increment\n     * allowed value is better to use this function to avoid 2 calls (and wait until\n     * the first transaction is mined) * From MonolithDAO Token.sol\n     */\n    function increaseApproval(address _spender, uint _addedValue) public returns (bool success) {\n        allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool success) {\n        uint oldValue = allowed[msg.sender][_spender];\n        if (_subtractedValue > oldValue) {\n            allowed[msg.sender][_spender] = 0;\n        } else {\n            allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);\n        }\n        Approval(msg.sender, _spender, allowed[msg.sender][_spender]);\n        return true;\n    }\n\n    function() public payable {\n        revert();\n    }\n\n}\n\n\n /*\n  ERC223 additions to ERC20\n\n  Interface wise is ERC20 + data paramenter to transfer and transferFrom.\n */\n\ncontract ERC223 is ERC20 {\n  function transfer(address to, uint value, bytes data) returns (bool ok);\n  function transferFrom(address from, address to, uint value, bytes data) returns (bool ok);\n}\n\n\ncontract Standard223Token is ERC223, StandardToken {\n    //function that is called when a user or another contract wants to transfer funds\n    function transfer(address _to, uint _value, bytes _data) returns (bool success) {\n        //filtering if the target is a contract with bytecode inside it\n        if (!super.transfer(_to, _value)) throw;\n        // do a normal token transfer\n        if (isContract(_to)) return contractFallback(msg.sender, _to, _value, _data);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint _value, bytes _data) returns (bool success) {\n        if (!super.transferFrom(_from, _to, _value)) throw;\n        // do a normal token transfer\n        if (isContract(_to)) return contractFallback(_from, _to, _value, _data);\n        return true;\n    }\n\n    function transfer(address _to, uint _value) returns (bool success) {\n        return transfer(_to, _value, new bytes(0));\n    }\n\n    function transferFrom(address _from, address _to, uint _value) returns (bool success) {\n        return transferFrom(_from, _to, _value, new bytes(0));\n    }\n\n    //function that is called when transaction target is a contract\n    function contractFallback(address _origin, address _to, uint _value, bytes _data) private returns (bool success) {\n        ERC223Receiver reciever = ERC223Receiver(_to);\n        return reciever.tokenFallback(msg.sender, _value, _data);\n    }\n\n    //assemble the given address bytecode. If bytecode exists then the _addr is a contract.\n    function isContract(address _addr) private returns (bool is_contract) {\n        // retrieve the size of the code on target address, this needs assembly\n        uint length;\n        assembly {length := extcodesize(_addr)}\n        return length > 0;\n    }\n\n}\n\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract BurnableToken is Standard223Token {\n\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param _value The amount of token to be burned.\n     */\n    function burn(uint _value) public {\n        require(_value > 0);\n        require(_value <= balances[msg.sender]);\n        address burner = msg.sender;\n        balances[burner] = balances[burner].sub(_value);\n        totalSupply = totalSupply.sub(_value);\n        Burn(burner, _value);\n    }\n\n    function burnAll() public {\n        address burner = msg.sender;\n        totalSupply = totalSupply.sub(balances[burner]);\n        Burn(burner, balances[burner]);\n        balances[burner] = 0;\n    }\n\n    event Burn(address indexed burner, uint indexed value);\n\n}\n\n\ncontract MFC_Token is BurnableToken {\n\n    string public constant name = \"MFC Coin Token\";\n\n    string public constant symbol = \"MFC\";\n\n    uint32 public constant decimals = 18;\n\n    uint256 public INITIAL_SUPPLY = 500000000 * 1 ether;\n\n    function MFC_Token() {\n        totalSupply = INITIAL_SUPPLY;\n        balances[msg.sender] = INITIAL_SUPPLY;\n    }\n\n}",
  "sourcePath": "/home/savao/hg/smart-contracts/contracts/MFC_coin.sol",
  "networks": {},
  "schemaVersion": "1.0.0",
  "updatedAt": "2018-02-16T13:47:57.386Z"
}